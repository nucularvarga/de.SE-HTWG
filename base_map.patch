Index: .idea/dictionaries/Janko.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/dictionaries/Janko.xml	(revision d92c34dad6220aae98b8d2bf0539eab51ad0a9e7)
+++ .idea/dictionaries/Janko.xml	(revision 6926ef919502e4b88488060cc26f6cb6c543ee6d)
@@ -2,6 +2,7 @@
   <dictionary name="Janko">
     <words>
       <w>feld</w>
+      <w>worldbuilder</w>
     </words>
   </dictionary>
 </component>
\ No newline at end of file
Index: src/main/scala/de/scala/Feld.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/scala/de/scala/Feld.scala	(revision d92c34dad6220aae98b8d2bf0539eab51ad0a9e7)
+++ src/main/scala/de/scala/Feld.scala	(revision 6926ef919502e4b88488060cc26f6cb6c543ee6d)
@@ -1,7 +1,10 @@
 package de.scala
 
-class Feld(stats: Int) {
-  def print:Unit = {
-    println(stats)
+class Feld(val stats: Array[Array[Tile]]) {
+  def printf:Unit = {
+    for (n <- 0.to(9)) {
+      for (m <- 0.to(9)) print(stats(n)(m))
+      println()
+    }
   }
 }
Index: src/main/scala/de/scala/Tile.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/scala/de/scala/Tile.scala	(revision 6926ef919502e4b88488060cc26f6cb6c543ee6d)
+++ src/main/scala/de/scala/Tile.scala	(revision 6926ef919502e4b88488060cc26f6cb6c543ee6d)
@@ -0,0 +1,5 @@
+package de.scala
+
+class Tile(val status: Int) {
+   override def toString = status.toString
+}
Index: src/main/scala/de/scala/Worldbuilder.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/scala/de/scala/Worldbuilder.scala	(revision 6926ef919502e4b88488060cc26f6cb6c543ee6d)
+++ src/main/scala/de/scala/Worldbuilder.scala	(revision 6926ef919502e4b88488060cc26f6cb6c543ee6d)
@@ -0,0 +1,23 @@
+package de.scala
+
+object Worldbuilder {
+
+  def line(size: Int, row: Int, col: Int, direction: Int, world: Array[Array[Tile]]): Array[Array[Tile]] = {
+      val newWorld = world
+      if(direction==0) {
+        for(n <- col.to(col+size)) newWorld(row)(n) = new Tile(4)
+        newWorld
+      } else {
+        for(n <- row.to(row+size)) newWorld(n)(col) = new Tile(4)
+        newWorld
+      }
+  }
+
+  def init(size: Int, world: Array[Array[Tile]]): Array[Array[Tile]] = {
+    for (n <- 0.to(9)) {
+      for (m <- 0.to(9)) world(n)(m) = new Tile(0)
+    }
+    world
+  }
+
+}
Index: src/main/scala/de/scala/main.scala
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/scala/de/scala/main.scala	(revision d92c34dad6220aae98b8d2bf0539eab51ad0a9e7)
+++ src/main/scala/de/scala/main.scala	(revision 6926ef919502e4b88488060cc26f6cb6c543ee6d)
@@ -2,7 +2,11 @@
 
 object entry{
   def main(args: Array[String]): Unit = {
-    val test = new Feld(4)
-    print (test.print)
+    val field = Array.ofDim[Tile](10,10)
+    Worldbuilder.init(10, field)
+    field(1)(1) = new Tile(3)
+    Worldbuilder.line(3,2,1,0,field)
+    val test = new Feld(field)
+    print (test.printf)
   }
 }
\ No newline at end of file
